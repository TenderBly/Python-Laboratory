"""
–ü—Ä–æ–≥—Ä–∞–º–∞ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ä–æ–∑–∫–ª–∞–¥–æ–º –ø–æ—ó–∑–¥—ñ–≤ –Ω–∞ —Å—Ç–∞–Ω—Ü—ñ—ó
–í–∞—Ä—ñ–∞–Ω—Ç: –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ—ó–∑–¥—ñ–≤, —è–∫—ñ —Å—Ç–æ—è—Ç—å –Ω–∞ —Å—Ç–∞–Ω—Ü—ñ—ó —É –≤–∏–∑–Ω–∞—á–µ–Ω–∏–π –º–æ–º–µ–Ω—Ç —á–∞—Å—É
"""

# –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Å–ª–æ–≤–Ω–∏–∫ –∑ —Ä–æ–∑–∫–ª–∞–¥–æ–º –ø–æ—ó–∑–¥—ñ–≤
trains_schedule = {
    "701–ö": {
        "–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è": "–ö–∏—ó–≤ - –•–∞—Ä–∫—ñ–≤",
        "–ø—Ä–∏–±—É—Ç—Ç—è": {"–≥–æ–¥–∏–Ω–∞": 8, "—Ö–≤–∏–ª–∏–Ω–∞": 15},
        "–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è": {"–≥–æ–¥–∏–Ω–∞": 8, "—Ö–≤–∏–ª–∏–Ω–∞": 45},
        "—Ç–∏–ø": "—à–≤–∏–¥–∫–∏–π"
    },
    "145–õ": {
        "–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è": "–õ—å–≤—ñ–≤ - –û–¥–µ—Å–∞",
        "–ø—Ä–∏–±—É—Ç—Ç—è": {"–≥–æ–¥–∏–Ω–∞": 10, "—Ö–≤–∏–ª–∏–Ω–∞": 30},
        "–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è": {"–≥–æ–¥–∏–Ω–∞": 11, "—Ö–≤–∏–ª–∏–Ω–∞": 10},
        "—Ç–∏–ø": "–ø–∞—Å–∞–∂–∏—Ä—Å—å–∫–∏–π"
    },
    "89–î": {
        "–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è": "–î–Ω—ñ–ø—Ä–æ - –ö–∏—ó–≤",
        "–ø—Ä–∏–±—É—Ç—Ç—è": {"–≥–æ–¥–∏–Ω–∞": 14, "—Ö–≤–∏–ª–∏–Ω–∞": 20},
        "–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è": {"–≥–æ–¥–∏–Ω–∞": 14, "—Ö–≤–∏–ª–∏–Ω–∞": 50},
        "—Ç–∏–ø": "–µ–∫—Å–ø—Ä–µ—Å"
    },
    "234–ü": {
        "–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è": "–ü–æ–ª—Ç–∞–≤–∞ - –•–∞—Ä–∫—ñ–≤",
        "–ø—Ä–∏–±—É—Ç—Ç—è": {"–≥–æ–¥–∏–Ω–∞": 9, "—Ö–≤–∏–ª–∏–Ω–∞": 5},
        "–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è": {"–≥–æ–¥–∏–Ω–∞": 9, "—Ö–≤–∏–ª–∏–Ω–∞": 25},
        "—Ç–∏–ø": "–ø—Ä–∏–º—ñ—Å—å–∫–∏–π"
    },
    "567–ó": {
        "–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è": "–ó–∞–ø–æ—Ä—ñ–∂–∂—è - –õ—å–≤—ñ–≤",
        "–ø—Ä–∏–±—É—Ç—Ç—è": {"–≥–æ–¥–∏–Ω–∞": 16, "—Ö–≤–∏–ª–∏–Ω–∞": 40},
        "–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è": {"–≥–æ–¥–∏–Ω–∞": 17, "—Ö–≤–∏–ª–∏–Ω–∞": 15},
        "—Ç–∏–ø": "–ø–∞—Å–∞–∂–∏—Ä—Å—å–∫–∏–π"
    },
    "892–ß": {
        "–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è": "–ß–µ—Ä–Ω—ñ–≥—ñ–≤ - –û–¥–µ—Å–∞",
        "–ø—Ä–∏–±—É—Ç—Ç—è": {"–≥–æ–¥–∏–Ω–∞": 7, "—Ö–≤–∏–ª–∏–Ω–∞": 50},
        "–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è": {"–≥–æ–¥–∏–Ω–∞": 8, "—Ö–≤–∏–ª–∏–Ω–∞": 10},
        "—Ç–∏–ø": "—à–≤–∏–¥–∫–∏–π"
    },
    "321–í": {
        "–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è": "–í—ñ–Ω–Ω–∏—Ü—è - –°—É–º–∏",
        "–ø—Ä–∏–±—É—Ç—Ç—è": {"–≥–æ–¥–∏–Ω–∞": 12, "—Ö–≤–∏–ª–∏–Ω–∞": 0},
        "–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è": {"–≥–æ–¥–∏–Ω–∞": 12, "—Ö–≤–∏–ª–∏–Ω–∞": 35},
        "—Ç–∏–ø": "–ø–∞—Å–∞–∂–∏—Ä—Å—å–∫–∏–π"
    },
    "456–ú": {
        "–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è": "–ú–∞—Ä—ñ—É–ø–æ–ª—å - –ö–∏—ó–≤",
        "–ø—Ä–∏–±—É—Ç—Ç—è": {"–≥–æ–¥–∏–Ω–∞": 15, "—Ö–≤–∏–ª–∏–Ω–∞": 25},
        "–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è": {"–≥–æ–¥–∏–Ω–∞": 16, "—Ö–≤–∏–ª–∏–Ω–∞": 5},
        "—Ç–∏–ø": "—à–≤–∏–¥–∫–∏–π"
    },
    "678–•": {
        "–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è": "–•–∞—Ä–∫—ñ–≤ - –£–∂–≥–æ—Ä–æ–¥",
        "–ø—Ä–∏–±—É—Ç—Ç—è": {"–≥–æ–¥–∏–Ω–∞": 11, "—Ö–≤–∏–ª–∏–Ω–∞": 45},
        "–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è": {"–≥–æ–¥–∏–Ω–∞": 12, "—Ö–≤–∏–ª–∏–Ω–∞": 20},
        "—Ç–∏–ø": "–ø–∞—Å–∞–∂–∏—Ä—Å—å–∫–∏–π"
    },
    "123–Ü": {
        "–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è": "–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫ - –ö–∏—ó–≤",
        "–ø—Ä–∏–±—É—Ç—Ç—è": {"–≥–æ–¥–∏–Ω–∞": 18, "—Ö–≤–∏–ª–∏–Ω–∞": 30},
        "–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è": {"–≥–æ–¥–∏–Ω–∞": 19, "—Ö–≤–∏–ª–∏–Ω–∞": 0},
        "—Ç–∏–ø": "–µ–∫—Å–ø—Ä–µ—Å"
    }
}


def validate_time(hour, minute):
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ—Ä–µ–∫—Ç–Ω–æ—Å—Ç—ñ –≤–≤–µ–¥–µ–Ω–æ–≥–æ —á–∞—Å—É"""
    if not isinstance(hour, int) or not isinstance(minute, int):
        raise ValueError("–ì–æ–¥–∏–Ω–∞ —Ç–∞ —Ö–≤–∏–ª–∏–Ω–∞ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ —Ü—ñ–ª–∏–º–∏ —á–∏—Å–ª–∞–º–∏")
    if hour < 0 or hour > 23:
        raise ValueError("–ì–æ–¥–∏–Ω–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—ñ –≤—ñ–¥ 0 –¥–æ 23")
    if minute < 0 or minute > 59:
        raise ValueError("–•–≤–∏–ª–∏–Ω–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—ñ –≤—ñ–¥ 0 –¥–æ 59")
    return True


def time_to_minutes(hour, minute):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è —á–∞—Å—É —É —Ö–≤–∏–ª–∏–Ω–∏ –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è"""
    return hour * 60 + minute


def format_time(time_dict):
    """–§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∞—Å—É –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è"""
    return f"{time_dict['–≥–æ–¥–∏–Ω–∞']:02d}:{time_dict['—Ö–≤–∏–ª–∏–Ω–∞']:02d}"


def display_all_trains(schedule):
    """–í–∏–≤–µ–¥–µ–Ω–Ω—è –Ω–∞ –µ–∫—Ä–∞–Ω –≤—Å—ñ—Ö –∑–Ω–∞—á–µ–Ω—å —Å–ª–æ–≤–Ω–∏–∫–∞"""
    if not schedule:
        print("\n‚ùå –†–æ–∑–∫–ª–∞–¥ –ø–æ—Ä–æ–∂–Ω—ñ–π!")
        return
    
    print("\n" + "="*80)
    print("üìã –†–û–ó–ö–õ–ê–î –ü–û–á–ó–î–Ü–í –ù–ê –°–¢–ê–ù–¶–Ü–á")
    print("="*80)
    
    for train_number, info in schedule.items():
        print(f"\nüöÇ –ü–æ—ó–∑–¥ ‚Ññ{train_number}")
        print(f"   –ú–∞—Ä—à—Ä—É—Ç: {info['–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è']}")
        print(f"   –ü—Ä–∏–±—É—Ç—Ç—è: {format_time(info['–ø—Ä–∏–±—É—Ç—Ç—è'])}")
        print(f"   –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è: {format_time(info['–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è'])}")
        print(f"   –¢–∏–ø: {info['—Ç–∏–ø']}")
    
    print("\n" + "="*80)


def add_train(schedule):
    """–î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É –¥–æ —Å–ª–æ–≤–Ω–∏–∫–∞"""
    print("\n‚ûï –î–û–î–ê–í–ê–ù–ù–Ø –ù–û–í–û–ì–û –ü–û–á–ó–î–ê")
    print("-" * 40)
    
    try:
        train_number = input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –ø–æ—ó–∑–¥–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 701–ö): ").strip()
        
        if not train_number:
            raise ValueError("–ù–æ–º–µ—Ä –ø–æ—ó–∑–¥–∞ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º")
        
        if train_number in schedule:
            raise ValueError(f"–ü–æ—ó–∑–¥ –∑ –Ω–æ–º–µ—Ä–æ–º {train_number} –≤–∂–µ —ñ—Å–Ω—É—î –≤ —Ä–æ–∑–∫–ª–∞–¥—ñ")
        
        destination = input("–í–≤–µ–¥—ñ—Ç—å –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ö–∏—ó–≤ - –•–∞—Ä–∫—ñ–≤): ").strip()
        if not destination:
            raise ValueError("–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º")
        
        # –í–≤–µ–¥–µ–Ω–Ω—è —á–∞—Å—É –ø—Ä–∏–±—É—Ç—Ç—è
        arrival_hour = int(input("–í–≤–µ–¥—ñ—Ç—å –≥–æ–¥–∏–Ω—É –ø—Ä–∏–±—É—Ç—Ç—è (0-23): "))
        arrival_minute = int(input("–í–≤–µ–¥—ñ—Ç—å —Ö–≤–∏–ª–∏–Ω—É –ø—Ä–∏–±—É—Ç—Ç—è (0-59): "))
        validate_time(arrival_hour, arrival_minute)
        
        # –í–≤–µ–¥–µ–Ω–Ω—è —á–∞—Å—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
        departure_hour = int(input("–í–≤–µ–¥—ñ—Ç—å –≥–æ–¥–∏–Ω—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è (0-23): "))
        departure_minute = int(input("–í–≤–µ–¥—ñ—Ç—å —Ö–≤–∏–ª–∏–Ω—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è (0-59): "))
        validate_time(departure_hour, departure_minute)
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —â–æ —á–∞—Å –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—ñ–∑–Ω—ñ—à–µ –ø—Ä–∏–±—É—Ç—Ç—è
        if time_to_minutes(departure_hour, departure_minute) <= time_to_minutes(arrival_hour, arrival_minute):
            raise ValueError("–ß–∞—Å –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –ø—ñ–∑–Ω—ñ—à–µ —á–∞—Å—É –ø—Ä–∏–±—É—Ç—Ç—è")
        
        train_type = input("–í–≤–µ–¥—ñ—Ç—å —Ç–∏–ø –ø–æ—ó–∑–¥–∞ (—à–≤–∏–¥–∫–∏–π/–ø–∞—Å–∞–∂–∏—Ä—Å—å–∫–∏–π/–µ–∫—Å–ø—Ä–µ—Å/–ø—Ä–∏–º—ñ—Å—å–∫–∏–π): ").strip()
        if not train_type:
            train_type = "–ø–∞—Å–∞–∂–∏—Ä—Å—å–∫–∏–π"
        
        # –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ—ó–∑–¥–∞ –¥–æ —Ä–æ–∑–∫–ª–∞–¥—É
        schedule[train_number] = {
            "–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è": destination,
            "–ø—Ä–∏–±—É—Ç—Ç—è": {"–≥–æ–¥–∏–Ω–∞": arrival_hour, "—Ö–≤–∏–ª–∏–Ω–∞": arrival_minute},
            "–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è": {"–≥–æ–¥–∏–Ω–∞": departure_hour, "—Ö–≤–∏–ª–∏–Ω–∞": departure_minute},
            "—Ç–∏–ø": train_type
        }
        
        print(f"\n‚úÖ –ü–æ—ó–∑–¥ {train_number} —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ –¥–æ —Ä–æ–∑–∫–ª–∞–¥—É!")
        
    except ValueError as e:
        print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—è: {e}")
    except Exception as e:
        print(f"\n‚ùå –ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")


def delete_train(schedule):
    """–í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É –∑—ñ —Å–ª–æ–≤–Ω–∏–∫–∞"""
    print("\n‚ûñ –í–ò–î–ê–õ–ï–ù–ù–Ø –ü–û–á–ó–î–ê –ó –†–û–ó–ö–õ–ê–î–£")
    print("-" * 40)
    
    try:
        train_number = input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –ø–æ—ó–∑–¥–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ").strip()
        
        if not train_number:
            raise ValueError("–ù–æ–º–µ—Ä –ø–æ—ó–∑–¥–∞ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º")
        
        if train_number not in schedule:
            raise KeyError(f"–ü–æ—ó–∑–¥ –∑ –Ω–æ–º–µ—Ä–æ–º {train_number} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ —Ä–æ–∑–∫–ª–∞–¥—ñ")
        
        # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
        print(f"\nüöÇ –ü–æ—ó–∑–¥: {train_number} - {schedule[train_number]['–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è']}")
        confirmation = input("–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π –ø–æ—ó–∑–¥? (—Ç–∞–∫/–Ω—ñ): ").strip().lower()
        
        if confirmation in ['—Ç–∞–∫', 'yes', 'y', '—Ç']:
            del schedule[train_number]
            print(f"\n‚úÖ –ü–æ—ó–∑–¥ {train_number} —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ —Ä–æ–∑–∫–ª–∞–¥—É!")
        else:
            print("\n‚ùå –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ")
            
    except KeyError as e:
        print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
    except Exception as e:
        print(f"\n‚ùå –ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")


def display_sorted_trains(schedule):
    """–ü–µ—Ä–µ–≥–ª—è–¥ –≤–º—ñ—Å—Ç—É —Å–ª–æ–≤–Ω–∏–∫–∞ –∑–∞ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–º–∏ –∫–ª—é—á–∞–º–∏"""
    if not schedule:
        print("\n‚ùå –†–æ–∑–∫–ª–∞–¥ –ø–æ—Ä–æ–∂–Ω—ñ–π!")
        return
    
    print("\n" + "="*80)
    print("üìã –†–û–ó–ö–õ–ê–î –ü–û–á–ó–î–Ü–í (–í–Ü–î–°–û–†–¢–û–í–ê–ù–û –ó–ê –ù–û–ú–ï–†–û–ú)")
    print("="*80)
    
    sorted_keys = sorted(schedule.keys())
    
    for train_number in sorted_keys:
        info = schedule[train_number]
        print(f"\nüöÇ –ü–æ—ó–∑–¥ ‚Ññ{train_number}")
        print(f"   –ú–∞—Ä—à—Ä—É—Ç: {info['–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è']}")
        print(f"   –ü—Ä–∏–±—É—Ç—Ç—è: {format_time(info['–ø—Ä–∏–±—É—Ç—Ç—è'])}")
        print(f"   –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è: {format_time(info['–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è'])}")
        print(f"   –¢–∏–ø: {info['—Ç–∏–ø']}")
    
    print("\n" + "="*80)


def find_trains_at_station(schedule):
    """
    –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ—ó–∑–¥—ñ–≤, —è–∫—ñ —Å—Ç–æ—è—Ç—å –Ω–∞ —Å—Ç–∞–Ω—Ü—ñ—ó —É –≤–∏–∑–Ω–∞—á–µ–Ω–∏–π –º–æ–º–µ–Ω—Ç —á–∞—Å—É
    """
    print("\nüîç –ü–û–®–£–ö –ü–û–á–ó–î–Ü–í –ù–ê –°–¢–ê–ù–¶–Ü–á")
    print("-" * 40)
    
    try:
        check_hour = int(input("–í–≤–µ–¥—ñ—Ç—å –≥–æ–¥–∏–Ω—É –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ (0-23): "))
        check_minute = int(input("–í–≤–µ–¥—ñ—Ç—å —Ö–≤–∏–ª–∏–Ω—É –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ (0-59): "))
        validate_time(check_hour, check_minute)
        
        check_time = time_to_minutes(check_hour, check_minute)
        
        trains_at_station = []
        
        for train_number, info in schedule.items():
            arrival_time = time_to_minutes(
                info['–ø—Ä–∏–±—É—Ç—Ç—è']['–≥–æ–¥–∏–Ω–∞'],
                info['–ø—Ä–∏–±—É—Ç—Ç—è']['—Ö–≤–∏–ª–∏–Ω–∞']
            )
            departure_time = time_to_minutes(
                info['–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è']['–≥–æ–¥–∏–Ω–∞'],
                info['–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è']['—Ö–≤–∏–ª–∏–Ω–∞']
            )
            
            # –ü–æ—ó–∑–¥ –Ω–∞ —Å—Ç–∞–Ω—Ü—ñ—ó, —è–∫—â–æ —á–∞—Å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –º—ñ–∂ –ø—Ä–∏–±—É—Ç—Ç—è–º —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è–º
            if arrival_time <= check_time <= departure_time:
                trains_at_station.append({
                    '–Ω–æ–º–µ—Ä': train_number,
                    '–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è': info['–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è'],
                    '–ø—Ä–∏–±—É—Ç—Ç—è': format_time(info['–ø—Ä–∏–±—É—Ç—Ç—è']),
                    '–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è': format_time(info['–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è'])
                })
        
        print(f"\n‚è∞ –ß–∞—Å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏: {check_hour:02d}:{check_minute:02d}")
        print("=" * 60)
        
        if trains_at_station:
            print(f"\n‚úÖ –ù–∞ —Å—Ç–∞–Ω—Ü—ñ—ó –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è {len(trains_at_station)} –ø–æ—ó–∑–¥(—ñ–≤):\n")
            for train in trains_at_station:
                print(f"üöÇ –ü–æ—ó–∑–¥ ‚Ññ{train['–Ω–æ–º–µ—Ä']}")
                print(f"   –ú–∞—Ä—à—Ä—É—Ç: {train['–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è']}")
                print(f"   –ü—Ä–∏–±—É–≤: {train['–ø—Ä–∏–±—É—Ç—Ç—è']}, –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç—å—Å—è: {train['–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è']}\n")
        else:
            print("\n‚ùå –£ –≤–∫–∞–∑–∞–Ω–∏–π —á–∞—Å –Ω–∞ —Å—Ç–∞–Ω—Ü—ñ—ó –Ω–µ–º–∞—î –ø–æ—ó–∑–¥—ñ–≤")
        
        print("=" * 60)
        
    except ValueError as e:
        print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—è: {e}")
    except Exception as e:
        print(f"\n‚ùå –ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")


def display_menu():
    """–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    print("\n" + "="*60)
    print("üöâ –°–ò–°–¢–ï–ú–ê –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –†–û–ó–ö–õ–ê–î–û–ú –ü–û–á–ó–î–Ü–í")
    print("="*60)
    print("1. –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –ø–æ—ó–∑–¥–∏")
    print("2. –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ—ó–∑–¥–∏ (–≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–æ –∑–∞ –Ω–æ–º–µ—Ä–æ–º)")
    print("3. –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π –ø–æ—ó–∑–¥")
    print("4. –í–∏–¥–∞–ª–∏—Ç–∏ –ø–æ—ó–∑–¥")
    print("5. –ó–Ω–∞–π—Ç–∏ –ø–æ—ó–∑–¥–∏ –Ω–∞ —Å—Ç–∞–Ω—Ü—ñ—ó —É –ø–µ–≤–Ω–∏–π —á–∞—Å")
    print("0. –í–∏—Ö—ñ–¥")
    print("="*60)


def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –ø—Ä–æ–≥—Ä–∞–º–∏ –∑ –¥—ñ–∞–ª–æ–≥–æ–≤–∏–º —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º"""
    print("\n")
    print("–í–Ü–¢–ê–Ñ–ú–û –£ –°–ò–°–¢–ï–ú–Ü –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –†–û–ó–ö–õ–ê–î–û–ú –ü–û–á–ó–î–Ü–í!")
    
    while True:
        display_menu()
        
        try:
            choice = input("\n–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é (0-5): ").strip()
            
            if choice == '1':
                display_all_trains(trains_schedule)
            elif choice == '2':
                display_sorted_trains(trains_schedule)
            elif choice == '3':
                add_train(trains_schedule)
            elif choice == '4':
                delete_train(trains_schedule)
            elif choice == '5':
                find_trains_at_station(trains_schedule)
            elif choice == '0':
                print("\n")
                print("–î—è–∫—É—î–º–æ –∑–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏! –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
                break
            else:
                print("\n‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –≤—ñ–¥ 0 –¥–æ 5")
                
        except KeyboardInterrupt:
            print("\n\n‚ö†Ô∏è  –ü—Ä–æ–≥—Ä–∞–º–∞ –ø–µ—Ä–µ—Ä–≤–∞–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
            print("–î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!\n")
            break
        except Exception as e:
            print(f"\n‚ùå –ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")


if __name__ == "__main__":
    main()
import json
import os
from datetime import time

# ====== –§–ê–ô–õ–ò ======
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
SOURCE_FILE = os.path.join(BASE_DIR, "trains.json")              # –≤–∏—Ö—ñ–¥–Ω–∏–π (–Ω–µ –∑–º—ñ–Ω—é—î–º–æ)
RESULT_FILE = os.path.join(BASE_DIR, "trains_at_station.json")   # —Ä–æ–±–æ—á–∏–π (—É—Å—ñ –∑–º—ñ–Ω–∏ —Å—é–¥–∏)


# ====== –î–û–ü–û–ú–Ü–ñ–ù–Ü –§–£–ù–ö–¶–Ü–á ======
def load_data():
    """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –¥–∞–Ω—ñ –∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞–±–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–Ω–æ–≥–æ —Ñ–∞–π–ª—É, —è–∫—â–æ –≤–æ–Ω–∏ –Ω–µ –ø–æ—Ä–æ–∂–Ω—ñ"""
    # —Å–ø—Ä–æ–±–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–Ω–∏–π —Ñ–∞–π–ª
    if os.path.exists(RESULT_FILE) and os.path.getsize(RESULT_FILE) > 0:
        try:
            with open(RESULT_FILE, "r", encoding="utf-8") as f:
                return json.load(f)
        except json.JSONDecodeError:
            print("‚ö†Ô∏è –§–∞–π–ª trains_at_station.json –ø–æ—à–∫–æ–¥–∂–µ–Ω–∏–π –∞–±–æ –ø–æ—Ä–æ–∂–Ω—ñ–π. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é –≤–∏—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ.")
    
    # —è–∫—â–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–Ω–æ–≥–æ –Ω–µ–º–∞ –∞–±–æ –≤—ñ–Ω –ø—É—Å—Ç–∏–π
    with open(SOURCE_FILE, "r", encoding="utf-8") as f:
        return json.load(f)


def save_data(data):
    """–ó–∞–ø–∏—Å—É—î –¥–∞–Ω—ñ —É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–Ω–∏–π —Ñ–∞–π–ª (trains_at_station.json)"""
    with open(RESULT_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=4)


def show_data(data):
    """–í–∏–≤–æ–¥–∏—Ç—å –≤–º—ñ—Å—Ç –¥–∞–Ω–∏—Ö"""
    if not data:
        print("–î–∞–Ω—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ.")
    else:
        print("\n--- –ü–û–¢–û–ß–ù–Ü –î–ê–ù–Ü ---")
        for t in data:
            print(f"–ü–æ—ó–∑–¥ ‚Ññ{t['number']}: {t['route']}, "
                  f"–ø—Ä–∏–±—É—Ç—Ç—è {t['arrival']['hour']:02d}:{t['arrival']['minute']:02d}, "
                  f"–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è {t['departure']['hour']:02d}:{t['departure']['minute']:02d}")


# ====== –û–°–ù–û–í–ù–Ü –û–ü–ï–†–ê–¶–Ü–á ======
def add_train(data):
    """–î–æ–¥–∞—î –Ω–æ–≤–∏–π –∑–∞–ø–∏—Å"""
    number = input("–ù–æ–º–µ—Ä –ø–æ—ó–∑–¥–∞: ")
    route = input("–ú–∞—Ä—à—Ä—É—Ç (–∑–≤—ñ–¥–∫–∏ ‚Äì –∫—É–¥–∏): ")
    arrival_hour = int(input("–ì–æ–¥–∏–Ω–∞ –ø—Ä–∏–±—É—Ç—Ç—è (0‚Äì23): "))
    arrival_min = int(input("–•–≤–∏–ª–∏–Ω–∏ –ø—Ä–∏–±—É—Ç—Ç—è (0‚Äì59): "))
    departure_hour = int(input("–ì–æ–¥–∏–Ω–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è (0‚Äì23): "))
    departure_min = int(input("–•–≤–∏–ª–∏–Ω–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è (0‚Äì59): "))

    train = {
        "number": number,
        "route": route,
        "arrival": {"hour": arrival_hour, "minute": arrival_min},
        "departure": {"hour": departure_hour, "minute": departure_min}
    }
    data.append(train)
    save_data(data)
    print("‚úÖ –ó–∞–ø–∏—Å –¥–æ–¥–∞–Ω–æ —É trains_at_station.json!")


def delete_train(data):
    """–í–∏–¥–∞–ª—è—î –∑–∞–ø–∏—Å –∑–∞ –Ω–æ–º–µ—Ä–æ–º"""
    num = input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –ø–æ—ó–∑–¥–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ")
    new_data = [t for t in data if t["number"] != num]
    if len(new_data) < len(data):
        save_data(new_data)
        print("üöÜ –ó–∞–ø–∏—Å –≤–∏–¥–∞–ª–µ–Ω–æ –∑ trains_at_station.json.")
    else:
        print("‚ùå –ü–æ—ó–∑–¥ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")


def search_train(data):
    """–ü–æ—à—É–∫ –ø–æ –º–∞—Ä—à—Ä—É—Ç—É"""
    route = input("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–ø—Ä—è–º (–∞–±–æ —á–∞—Å—Ç–∏–Ω—É –Ω–∞–∑–≤–∏): ").lower()
    found = [t for t in data if route in t["route"].lower()]
    if found:
        print("\nüîé –ó–Ω–∞–π–¥–µ–Ω—ñ –ø–æ—ó–∑–¥–∏:")
        show_data(found)
        save_data(found)
        print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –∑–∞–ø–∏—Å–∞–Ω–æ —É trains_at_station.json.")
    else:
        print("–ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")


def trains_at_time(data):
    """–ó–Ω–∞—Ö–æ–¥–∏—Ç—å –ø–æ—ó–∑–¥–∏, —â–æ —Å—Ç–æ—è—Ç—å –Ω–∞ —Å—Ç–∞–Ω—Ü—ñ—ó —É –ø–µ–≤–Ω–∏–π –º–æ–º–µ–Ω—Ç —á–∞—Å—É"""
    hour = int(input("–ì–æ–¥–∏–Ω–∞ (0‚Äì23): "))
    minute = int(input("–•–≤–∏–ª–∏–Ω–∞ (0‚Äì59): "))
    current = time(hour, minute)

    standing = []
    for t in data:
        arrival = time(t["arrival"]["hour"], t["arrival"]["minute"])
        departure = time(t["departure"]["hour"], t["departure"]["minute"])
        if arrival <= current <= departure:
            standing.append(t)

    if standing:
        print("\nüöâ –ù–∞ —Å—Ç–∞–Ω—Ü—ñ—ó –∑–∞—Ä–∞–∑ —Å—Ç–æ—è—Ç—å:")
        show_data(standing)
    else:
        print("–ù–∞ —Å—Ç–∞–Ω—Ü—ñ—ó –∑–∞—Ä–∞–∑ –Ω–µ–º–∞—î –ø–æ—ó–∑–¥—ñ–≤.")

    save_data(standing)
    print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∑–∞–ø–∏—Å–∞–Ω–æ —É trains_at_station.json.")


# ====== –ú–ï–ù–Æ ======
def main():
    data = load_data()
    while True:
        print("\n--- –ú–ï–ù–Æ ---")
        print("1. –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –∑–∞–ø–∏—Å–∏")
        print("2. –î–æ–¥–∞—Ç–∏ –∑–∞–ø–∏—Å")
        print("3. –í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–ø–∏—Å")
        print("4. –ü–æ—à—É–∫ –∑–∞ –º–∞—Ä—à—Ä—É—Ç–æ–º")
        print("5. –í–∏–∑–Ω–∞—á–∏—Ç–∏ –ø–æ—ó–∑–¥–∏, —â–æ —Å—Ç–æ—è—Ç—å –Ω–∞ —Å—Ç–∞–Ω—Ü—ñ—ó")
        print("0. –í–∏—Ö—ñ–¥")

        choice = input("–í–∞—à –≤–∏–±—ñ—Ä: ")
        if choice == "1":
            show_data(data)
        elif choice == "2":
            add_train(data)
            data = load_data()
        elif choice == "3":
            delete_train(data)
            data = load_data()
        elif choice == "4":
            search_train(data)
        elif choice == "5":
            trains_at_time(data)
        elif choice == "0":
            print("–í–∏—Ö—ñ–¥ —ñ–∑ –ø—Ä–æ–≥—Ä–∞–º–∏.")
            break
        else:
            print("–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä!")


if __name__ == "__main__":
    main()
